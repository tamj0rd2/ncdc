diff --git a/node_modules/ts-json-schema-generator/dist/src/NodeParser/InterfaceAndClassNodeParser.js b/node_modules/ts-json-schema-generator/dist/src/NodeParser/InterfaceAndClassNodeParser.js
index 07084bc..277f541 100644
--- a/node_modules/ts-json-schema-generator/dist/src/NodeParser/InterfaceAndClassNodeParser.js
+++ b/node_modules/ts-json-schema-generator/dist/src/NodeParser/InterfaceAndClassNodeParser.js
@@ -107,9 +107,9 @@ class InterfaceAndClassNodeParser {
         var _a;
         const indexSignature = node.members.find(ts.isIndexSignatureDeclaration);
         if (!indexSignature) {
-            return false;
+            return true;
         }
-        return (_a = this.childNodeParser.createType(indexSignature.type, context)) !== null && _a !== void 0 ? _a : false;
+        return (_a = this.childNodeParser.createType(indexSignature.type, context)) !== null && _a !== void 0 ? _a : true;
     }
     getTypeId(node, context) {
         const nodeType = ts.isInterfaceDeclaration(node) ? "interface" : "class";
diff --git a/node_modules/ts-json-schema-generator/dist/src/NodeParser/MappedTypeNodeParser.js b/node_modules/ts-json-schema-generator/dist/src/NodeParser/MappedTypeNodeParser.js
index 2803af1..2b001bc 100644
--- a/node_modules/ts-json-schema-generator/dist/src/NodeParser/MappedTypeNodeParser.js
+++ b/node_modules/ts-json-schema-generator/dist/src/NodeParser/MappedTypeNodeParser.js
@@ -86,10 +86,10 @@ class MappedTypeNodeParser {
         var _a;
         const key = keyListType.getTypes().filter((type) => !(type instanceof LiteralType_1.LiteralType))[0];
         if (key) {
-            return (_a = this.childNodeParser.createType(node.type, this.createSubContext(node, key, context))) !== null && _a !== void 0 ? _a : false;
+            return (_a = this.childNodeParser.createType(node.type, this.createSubContext(node, key, context))) !== null && _a !== void 0 ? _a : true;
         }
         else {
-            return false;
+            return true;
         }
     }
     createSubContext(node, key, parentContext) {
diff --git a/node_modules/ts-json-schema-generator/dist/src/NodeParser/TypeLiteralNodeParser.js b/node_modules/ts-json-schema-generator/dist/src/NodeParser/TypeLiteralNodeParser.js
index 5d9fda7..2e593d1 100644
--- a/node_modules/ts-json-schema-generator/dist/src/NodeParser/TypeLiteralNodeParser.js
+++ b/node_modules/ts-json-schema-generator/dist/src/NodeParser/TypeLiteralNodeParser.js
@@ -50,9 +50,9 @@ class TypeLiteralNodeParser {
         var _a;
         const indexSignature = node.members.find(ts.isIndexSignatureDeclaration);
         if (!indexSignature) {
-            return false;
+            return true;
         }
-        return (_a = this.childNodeParser.createType(indexSignature.type, context)) !== null && _a !== void 0 ? _a : false;
+        return (_a = this.childNodeParser.createType(indexSignature.type, context)) !== null && _a !== void 0 ? _a : true;
     }
     getTypeId(node, context) {
         return `structure-${nodeKey_1.getKey(node, context)}`;
